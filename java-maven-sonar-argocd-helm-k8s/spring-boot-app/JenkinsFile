pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }  
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://44.211.218.19:9000"
      }
      steps {
         sh 'echo passed'
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
         sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
     }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sammy34719/jenkinscicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-CI-CD"
            GIT_USER_NAME = "SaminderSingh"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
              sh '''
                echo "游리 Step 1: Show current working directory before clone:"
                pwd
      
                echo "游리 Step 3: Show directory after clone"
                ls -la
        
                echo "游리 Step 4: Modify deployment file in cloned repo"
                sed -i "s+sammy34719/jenkinscicd.*+sammy34719/jenkinscicd:${BUILD_NUMBER}+g" manifest/deployment.yml
        
                echo "游리 Step 5: Change into manifest directory"
                cd manifest
                pwd  # This will now show /var/lib/jenkins/workspace/your-job-name/manifest
        
                echo "游리 Step 6: Git add/commit/push"
                git config user.email "ssaminder@gmail.com"
                git config user.name "SaminderSingh"
                git add deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER} [ci skip]"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
              '''
            }
        }
    }
  }
}
